<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zoubei.mapper.scene.SceneMapper" >
  <resultMap id="BaseResultMap" type="com.zoubei.entity.scene.Scene" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Apr 15 14:53:38 CST 2018.
    -->
    <id column="scene_id" property="sceneId" jdbcType="INTEGER" />
    <result column="scene_name" property="sceneName" jdbcType="VARCHAR" />
    <result column="area_id" property="areaId" jdbcType="INTEGER" />
    <result column="scene_address" property="sceneAddress" jdbcType="VARCHAR" />
    <result column="scene_content" property="sceneContent" jdbcType="VARCHAR" />
    <result column="scene_level" property="sceneLevel" jdbcType="INTEGER" />
    <result column="scene_price" property="scenePrice" jdbcType="INTEGER" />
    <result column="scene_nums" property="sceneNums" jdbcType="INTEGER" />
    <result column="scene_shounum" property="sceneShounum" jdbcType="INTEGER" />
    <result column="scene_phone" property="scenePhone" jdbcType="VARCHAR" />
    <result column="scene_line" property="sceneLine" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="type_name" property="typeName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Apr 15 14:53:38 CST 2018.
    -->
    scene_id, scene_name, area_id, scene_address, scene_content, scene_level, scene_price, 
    scene_nums, scene_shounum, scene_phone, scene_line, type_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Apr 15 14:53:38 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from tra_scene
    where scene_id = #{sceneId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Apr 15 14:53:38 CST 2018.
    -->
    delete from tra_scene
    where scene_id = #{sceneId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zoubei.entity.scene.Scene" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Apr 15 14:53:38 CST 2018.
    -->
    insert into tra_scene (scene_id, scene_name, area_id, 
      scene_address, scene_content, scene_level, 
      scene_price, scene_nums, scene_shounum, 
      scene_phone, scene_line, type_id
      )
    values (#{sceneId,jdbcType=INTEGER}, #{sceneName,jdbcType=VARCHAR}, #{areaId,jdbcType=INTEGER}, 
      #{sceneAddress,jdbcType=VARCHAR}, #{sceneContent,jdbcType=VARCHAR}, #{sceneLevel,jdbcType=INTEGER}, 
      #{scenePrice,jdbcType=INTEGER}, #{sceneNums,jdbcType=INTEGER}, #{sceneShounum,jdbcType=INTEGER}, 
      #{scenePhone,jdbcType=VARCHAR}, #{sceneLine,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zoubei.entity.scene.Scene" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Apr 15 14:53:38 CST 2018.
    -->
    insert into tra_scene
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sceneId != null" >
        scene_id,
      </if>
      <if test="sceneName != null" >
        scene_name,
      </if>
      <if test="areaId != null" >
        area_id,
      </if>
      <if test="sceneAddress != null" >
        scene_address,
      </if>
      <if test="sceneContent != null" >
        scene_content,
      </if>
      <if test="sceneLevel != null" >
        scene_level,
      </if>
      <if test="scenePrice != null" >
        scene_price,
      </if>
      <if test="sceneNums != null" >
        scene_nums,
      </if>
      <if test="sceneShounum != null" >
        scene_shounum,
      </if>
      <if test="scenePhone != null" >
        scene_phone,
      </if>
      <if test="sceneLine != null" >
        scene_line,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sceneId != null" >
        #{sceneId,jdbcType=INTEGER},
      </if>
      <if test="sceneName != null" >
        #{sceneName,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null" >
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="sceneAddress != null" >
        #{sceneAddress,jdbcType=VARCHAR},
      </if>
      <if test="sceneContent != null" >
        #{sceneContent,jdbcType=VARCHAR},
      </if>
      <if test="sceneLevel != null" >
        #{sceneLevel,jdbcType=INTEGER},
      </if>
      <if test="scenePrice != null" >
        #{scenePrice,jdbcType=INTEGER},
      </if>
      <if test="sceneNums != null" >
        #{sceneNums,jdbcType=INTEGER},
      </if>
      <if test="sceneShounum != null" >
        #{sceneShounum,jdbcType=INTEGER},
      </if>
      <if test="scenePhone != null" >
        #{scenePhone,jdbcType=VARCHAR},
      </if>
      <if test="sceneLine != null" >
        #{sceneLine,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zoubei.entity.scene.Scene" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Apr 15 14:53:38 CST 2018.
    -->
    update tra_scene
    <set >
      <if test="sceneName != null" >
        scene_name = #{sceneName,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null" >
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="sceneAddress != null" >
        scene_address = #{sceneAddress,jdbcType=VARCHAR},
      </if>
      <if test="sceneContent != null" >
        scene_content = #{sceneContent,jdbcType=VARCHAR},
      </if>
      <if test="sceneLevel != null" >
        scene_level = #{sceneLevel,jdbcType=INTEGER},
      </if>
      <if test="scenePrice != null" >
        scene_price = #{scenePrice,jdbcType=INTEGER},
      </if>
      <if test="sceneNums != null" >
        scene_nums = #{sceneNums,jdbcType=INTEGER},
      </if>
      <if test="sceneShounum != null" >
        scene_shounum = #{sceneShounum,jdbcType=INTEGER},
      </if>
      <if test="scenePhone != null" >
        scene_phone = #{scenePhone,jdbcType=VARCHAR},
      </if>
      <if test="sceneLine != null" >
        scene_line = #{sceneLine,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
    </set>
    where scene_id = #{sceneId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zoubei.entity.scene.Scene" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Apr 15 14:53:38 CST 2018.
    -->
    update tra_scene
    set scene_name = #{sceneName,jdbcType=VARCHAR},
      area_id = #{areaId,jdbcType=INTEGER},
      scene_address = #{sceneAddress,jdbcType=VARCHAR},
      scene_content = #{sceneContent,jdbcType=VARCHAR},
      scene_level = #{sceneLevel,jdbcType=INTEGER},
      scene_price = #{scenePrice,jdbcType=INTEGER},
      scene_nums = #{sceneNums,jdbcType=INTEGER},
      scene_shounum = #{sceneShounum,jdbcType=INTEGER},
      scene_phone = #{scenePhone,jdbcType=VARCHAR},
      scene_line = #{sceneLine,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER}
    where scene_id = #{sceneId,jdbcType=INTEGER}
  </update>
  
  
   <!-- selectSceneById  根据景点ID查询景点详情 -->
  <select id="selectSceneById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  		select 
			are.scene_id,
			are.scene_name,
			are.area_id,
			are.scene_address,
			are.scene_content,
			are.scene_level,
			are.scene_price,
			are.scene_nums,
			are.scene_shounum,
			are.scene_phone,
			are.scene_line,
			are.type_id
		from (
			 select 
			 b.area_id,b.area_name,b.area_pid,
			 scene.scene_id,scene.scene_name,scene.scene_address,
			 scene.scene_content,scene.scene_level,scene.scene_price,
			 scene.scene_nums,scene.scene_shounum,scene.scene_phone,
			 scene.scene_line,scene.type_id		
			 from (
			      select 
					s.scene_id,s.scene_name,s.area_id,s.scene_address,
					s.scene_content,s.scene_level,s.scene_price,
					s.scene_nums,s.scene_shounum,s.scene_phone,
					s.scene_line,s.type_id
			      from tra_scene s where s.scene_id=#{sceneId,jdbcType=INTEGER}
	     	 )scene,tra_area b where b.area_id=scene.area_id
		)are,tra_area areb where are.area_pid=areb.area_id
  		
  </select>
  
  
  <!-- selectSceneList -->
  <select id="selectSceneList" resultMap="BaseResultMap">
		select 
			scene_id,
			scene_name,
			area_id,
			scene_address,
			scene_content,
			scene_level,
			scene_price,
			scene_nums,
			scene_shounum,
			scene_phone,
			scene_line,
			type_id
		from tra_scene
  </select>
  
    <!-- 查询景点表所有信息 -->
  <select id="selectScene" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List"></include>
  	from tra_scene order by scene_shounum desc
  	</select>
  
  <!-- 根据市级Pid来进行查询所有的区     继而查询出该市所有的景点 -->
  <select id="selectSceneListByAreaId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
	select 
			s.type_id, t.type_name, s.scene_id, s.scene_name, s.area_id, 
			s.scene_address, s.scene_content, s.scene_level, s.scene_price, 
			s.scene_nums, s.scene_shounum, s.scene_phone, s.scene_line
	from tra_scene_type t,
			(
				select 
					scene_id,scene_name,area_id,scene_address,scene_content,
					scene_level,scene_price,scene_nums,scene_shounum,scene_phone,
					scene_line,type_id
				from tra_scene
				where area_id 
				in 
				(
					SELECT area_id 
					from tra_area
					where area_pid = #{areaId,jdbcType=INTEGER}
				)
			) s
	where t.type_id=s.type_id 
  </select>
 
  <!-- 根据区id   查询出该区所有的景点 -->
  <select id="selectScenesByAreaId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
  	 select 
    <include refid="Base_Column_List" />
    from tra_scene
    where area_id = #{areaId,jdbcType=INTEGER}
  </select>
 
 
  <!-- selectSceneOrderBy -->
  <select id="selectSceneOrderBy" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  		select
			s.scene_id,
			s.scene_name,
			s.area_id,
			s.scene_address,
			s.scene_content,
			s.scene_level,
			s.scene_price,
			s.scene_nums,
			s.scene_shounum,
			s.scene_phone,
			s.scene_line,
			s.type_id 
		from tra_scene s where s.area_id in (
		  select a.area_id from tra_area a where a.area_pid in (
		   select area_pid from tra_area where area_id in (
		    select area_id from tra_scene where scene_id=#{sceneId,jdbcType=INTEGER}
		    )
		   )
		  ) order by scene_shounum desc 
  </select>
  
  <!-- 查询景点所有图片的信息 -->
    <resultMap id="getScene" type="com.zoubei.entity.scene.Scene" >
    
    <id column="scene_id" property="sceneId" jdbcType="INTEGER" />
    <result column="scene_name" property="sceneName" jdbcType="VARCHAR" />
    <result column="area_id" property="areaId" jdbcType="INTEGER" />
    <result column="scene_address" property="sceneAddress" jdbcType="VARCHAR" />
    <result column="scene_content" property="sceneContent" jdbcType="VARCHAR" />
    <result column="scene_level" property="sceneLevel" jdbcType="INTEGER" />
    <result column="scene_price" property="scenePrice" jdbcType="INTEGER" />
    <result column="scene_nums" property="sceneNums" jdbcType="INTEGER" />
    <result column="scene_shounum" property="sceneShounum" jdbcType="INTEGER" />
    <result column="scene_phone" property="scenePhone" jdbcType="VARCHAR" />
    <result column="scene_line" property="sceneLine" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="type_name" property="typeName" jdbcType="VARCHAR" />
    	<collection property="scenceimgs" ofType="com.zoubei.entity.scene.SceneImg">
    		<id column="img_id" property="imgId" jdbcType="INTEGER" />
		    <result column="scene_id" property="sceneId" jdbcType="INTEGER" />
		    <result column="img_url" property="imgUrl" jdbcType="VARCHAR" />
    	</collection>
  </resultMap>
  <select id="selectSceneByimg" resultMap="getScene">
  	select * from tra_scene 
		LEFT join tra_scene_img on tra_scene.scene_id=tra_scene_img.scene_id
  </select>
  
  <select id="selectSi" resultMap="BaseResultMap">
  	select 
  		<include refid="Base_Column_List"></include>
  	from tra_scene
  </select>
  
  <select id="selectSceneByIds" parameterType="hashMap" resultMap="BaseResultMap">
  	select 
  		<include refid="Base_Column_List"></include> 
  	from tra_scene 
  	where scene_id in (${ids })
  </select>
  
  <select id="selectShounum" resultMap="BaseResultMap">
  	select 
  		<include refid="Base_Column_List"></include>
  	from tra_scene
  </select>
  
</mapper>